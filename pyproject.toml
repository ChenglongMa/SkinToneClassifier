[project]
# This is the name of your project. The first time you publish this
# package, this name will be registered for you. It will determine how
# users can install this project, e.g.:
#
# $ pip install sampleproject
#
# And where it will live on PyPI: https://pypi.org/project/sampleproject/
#
# There are some restrictions on what makes a valid project name
# specification here:
# https://packaging.python.org/specifications/core-metadata/#name
name = "skin-tone-classifier"  # Required

dynamic = ["version"]
# https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html#dynamic-metadata
# "dependencies", "optional-dependencies" are BETA features currently
#dynamic = ["version", "dependencies", "optional-dependencies"]

# Versions should comply with PEP 440:
# https://www.python.org/dev/peps/pep-0440/
#
# For a discussion on single-sourcing the version, see
# https://packaging.python.org/guides/single-sourcing-package-version/
#https://packaging.python.org/en/latest/specifications/version-specifiers/#version-specifiers
#version = "1.2.3"  # Required

# This is a one-line description or tagline of what your project does. This
# corresponds to the "Summary" metadata field:
# https://packaging.python.org/specifications/core-metadata/#summary
description = "An easy-to-use library for skin tone classification"  # Optional

# This is an optional longer description of your project that represents
# the body of text which users will see when they visit PyPI.
#
# Often, this is the same as your README, so you can just read it in from
# that file directly (as we have already done above)
#
# This field corresponds to the "Description" metadata field:
# https://packaging.python.org/specifications/core-metadata/#description-optional
readme = "README.md" # Optional

# Specify which Python versions you support. In contrast to the
# 'Programming Language' classifiers above, 'pip install' will check this
# and refuse to install the project if the version does not match. See
# https://packaging.python.org/guides/distributing-packages-using-setuptools/#python-requires
requires-python = ">=3.9"

# This is either text indicating the license for the distribution, or a file
# that contains the license
# https://packaging.python.org/en/latest/specifications/core-metadata/#license
#license = { file = "LICENSE" }

# This field adds keywords for your project which will appear on the
# project page. What does your project relate to?
#
# Note that this is a list of additional keywords, separated
# by commas, to be used to assist searching for the distribution in a
# larger catalog.
keywords = ["skin tone", "image recognition", "face detection", "skin detection", "image segmentation"]  # Optional

# This should be your name or the name of the organization who originally
# authored the project, and a valid email address corresponding to the name
# listed.
authors = [
    { name = "Chenglong Ma", email = "chenglong.m@outlook.com" } # Optional
]

# This should be your name or the names of the organization who currently
# maintains the project, and a valid email address corresponding to the name
# listed.
maintainers = [
    { name = "Chenglong Ma", email = "chenglong.m@outlook.com" } # Optional
]

# Classifiers help users find your project by categorizing it.
#
# For a list of valid classifiers, see https://pypi.org/classifiers/
classifiers = [# Optional
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: End Users/Desktop",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering :: Image Recognition",
    "Topic :: Scientific/Engineering :: Image Processing",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Scientific/Engineering :: Visualization",
    "Topic :: Sociology",
    "Topic :: Multimedia :: Graphics",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Terminals",
    "Environment :: Console",
    "Environment :: Web Environment",
    "Environment :: Win32 (MS Windows)",
    "Environment :: MacOS X",
    "Environment :: Other Environment",
]

# This field lists other packages that your project depends on to run.
# Any package you put here will be installed by pip when your project is
# installed, so they must be valid existing projects.
#
# For an analysis of this field vs pip's requirements files see:
# https://packaging.python.org/discussions/install-requires-vs-requirements/
dependencies = [# Optional
    "opencv-python>=4.9.0.80",
    "numpy>=1.21.5",
    "colormath>=3.0.0",
    "tqdm>=4.64.0",
    "colorama>=0.4.6",
    "packaging>=23.1",
    "requests>=2.31.0",
]

# List additional groups of dependencies here (e.g. development
# dependencies). Users will be able to install these using the "extras"
# syntax, for example:
#
#   $ pip install sampleproject[dev]
#
# Similar to `dependencies` above, these must be valid existing
# projects.
[project.optional-dependencies] # Optional
all = [
    "gooey>=1.0.8.1",
    "re-wx==0.0.10",
    "colored==1.3.93",
]

# List URLs that are relevant to your project
#
# This field corresponds to the "Project-URL" and "Home-Page" metadata fields:
# https://packaging.python.org/specifications/core-metadata/#project-url-multiple-use
# https://packaging.python.org/specifications/core-metadata/#home-page-optional
#
# Examples listed include a pattern for specifying where the package tracks
# issues, where the source is hosted, where to say thanks to the package
# maintainers, and where to support the project financially. The key is
# what's used to render the link text on PyPI.
[project.urls]  # Optional
"Homepage" = "https://chenglongma.com/SkinToneClassifier/"
"Bug Reports" = "https://github.com/ChenglongMa/SkinToneClassifier/issues"
"Funding" = "https://github.com/sponsors/ChenglongMa"
"Say Thanks!" = "https://saythanks.io/to/ChenglongMa"
"Repository" = "https://github.com/ChenglongMa/SkinToneClassifier/"
Changelog = "https://github.com/ChenglongMa/SkinToneClassifier/blob/main/CHANGELOG.md"

# The following would provide a command line executable called `sample`
# which executes the function `main` from this package when invoked.
[project.scripts]  # Optional
stone = "stone.__main__:main"

[project.gui-scripts]
stone-gui = "stone.__main__:main"

# This is configuration specific to the `setuptools` build backend.
# If you are using a different build backend, you will need to change this.
[tool.setuptools]
# If there are data files included in your packages that need to be
# installed, specify them here.
package-dir = { "" = "src" }
license-files = ["LICENSE"]

[tool.setuptools.dynamic]
version = { attr = "stone.package.__version__" }

[build-system]
# These are the assumed default build requirements from pip:
# https://pip.pypa.io/en/stable/reference/pip/#pep-517-and-518-support
requires = ["setuptools>=66.1.0", "wheel"]
build-backend = "setuptools.build_meta"
